// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = Config.kotlinVersion
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        def koin_version = "2.2.3"

        classpath 'com.android.tools.build:gradle:7.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.insert-koin:koin-gradle-plugin:$koin_version"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin: 'koin'

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

//For all subprojects - generate compileSdkVersion, minSdkVersion, targetSdkVersion and Java compatibility
subprojects {
    afterEvaluate { project ->
        if (project.plugins.findPlugin('android') ?: project.plugins.findPlugin('android-library')) {
            android {
                compileSdkVersion Config.compileSdk
                buildToolsVersion Config.buildTools

                defaultConfig {
                    minSdkVersion Config.minSdk
                    targetSdkVersion Config.targetSdk
                    versionCode Releases.versionCode
                    versionName Releases.versionName
                    multiDexEnabled true

                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                }

                compileOptions {
                    sourceCompatibility Config.javaVersion
                    targetCompatibility Config.javaVersion
                }

                buildTypes {
                    release {
                        minifyEnabled false
                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    }
                }

                buildFeatures {
                    viewBinding true
                }

                kotlinOptions {
                    jvmTarget = Config.javaVersion
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}