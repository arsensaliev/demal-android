// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = Config.kotlin_version
    repositories {
        google()
        jcenter()
    }
    dependencies {

        classpath "com.android.tools.build:gradle:4.1.3"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

//For all subprojects - generate compileSdkVersion, minSdkVersion, targetSdkVersion and Java compatibility
subprojects {
    afterEvaluate { project ->
        if (project.plugins.findPlugin('android') ?: project.plugins.findPlugin('android-library')) {
            android {
                compileSdkVersion Config.compile_sdk
                buildToolsVersion Config.build_tools

                defaultConfig {
                    minSdkVersion Config.min_sdk
                    targetSdkVersion Config.target_sdk
                    versionCode Releases.version_code
                    versionName Releases.version_name
                    multiDexEnabled true

                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                }

                compileOptions {
                    sourceCompatibility Config.java_version
                    targetCompatibility Config.java_version
                }

                buildTypes {
                    release {
                        minifyEnabled false
                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    }
                }

                buildFeatures {
                    viewBinding true
                }

                kotlinOptions {
                    jvmTarget = Config.java_version
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}